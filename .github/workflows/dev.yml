name: Validate and deploy bundle


on:
  workflow_dispatch:

#  push:
#    branches:
#      - dev

  pull_request:
    types:
      - opened
      - synchronize
      - closed

jobs:
  validate:
    name: "Test code and bundle"
    runs-on: ubuntu-latest
    environment: test
    defaults:
      run:
        working-directory: .
 
    steps:
      - uses: actions/checkout@v3

      - name: Set up Python 3.11
        uses: actions/setup-python@v4
        with:
          python-version: '3.11'
      - run: python -m pip install --upgrade pip
      - run: pip install -r requirements-dev.txt

      #----------------------------------------------
      #              run test suite
      #----------------------------------------------
      - name: Run unit tests
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}
          DBCONNECT_SERVERLESS: "true"
        run: |
          pytest tests
     
      - uses: databricks/setup-cli@main

      - run: databricks bundle validate --target cicd_testing
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}

  deploy:
    if: github.event.pull_request.merged == true
    name: "Run deploy"
    runs-on: ubuntu-latest
    environment: test
    defaults:
      run:
        working-directory: .

    needs:
      - validate

    steps:
      - uses: actions/checkout@v3

      - uses: databricks/setup-cli@main

      - name: Deploy bundle
        run: databricks bundle deploy --target cicd_testing
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}

      - name: Run notebook validation
        shell: bash
        run: |
          set -o pipefail
          databricks bundle run notebook_validation_job -t cicd_testing --refresh-all 2>&1 | tee output.log
        env:
          DATABRICKS_HOST: ${{ secrets.DATABRICKS_HOST }}
          DATABRICKS_TOKEN: ${{ secrets.DATABRICKS_TOKEN }}